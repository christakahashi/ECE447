{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.1"
    },
    "colab": {
      "name": "ece447_hw1.ipynb",
      "provenance": []
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PtSz2SR8x3ZT",
        "colab_type": "text"
      },
      "source": [
        "Homework 1\n",
        "===\n",
        "Jupyter notebooks; Control System Definitions.\n",
        "\n",
        "**Due Sunday April 10 at 11:59pm**\n",
        "\n",
        "**Instructions:** Make a copy of this notebook that you can edit and save. If you are using CoLab, that means clicking File>Save and then \"SAVE A COPY IN DRIVE\". Then, for each problem, insert your answers directly underneath the problem description as one or more `Code` or `Markdown` cells as appropriate. Every code cell should execute without errors. TAs and graders may not have resources to debug your code. When you are satisfied with your answers, save your notebook with with the title `ee447_hw1_yourlastname_yourfirstname.ipynb` and upload it to canvas. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DGakabg7x3ZW",
        "colab_type": "text"
      },
      "source": [
        "**Relevant Reading and tools**\n",
        "\n",
        "- Nise, Chapter 1. You can skim the section on MATLAB since we are using Python.\n",
        "- You can find the first edition of Nise here: https://archive.org/details/controlsystemsen0000nise  It may not match the organization of the 7th edition but problems taken from nise will be referenced for the first and 7th edition.\n",
        "- Note that these problems require you to draw a diagram. One option for drawing is [Google Drawing](https://docs.google.com/drawings/). Once you make your diagram, save it to your Google drive and then choose \"File > Publish to the web...\". This will give you a link that you can use with the `![](url)` Markdown notation to embed the image in your Jupyter notebook."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "collapsed": true,
        "id": "3e92zqR7x3Zb",
        "colab_type": "text"
      },
      "source": [
        "## 1) Motorcycle automatic volume control\n",
        "\n",
        "Do problem 4 Nise 7e Chapter 1 (aka problem 7 nise 1e)\n",
        "\n",
        "------\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5HQMPF2R7Rqm",
        "colab_type": "text"
      },
      "source": [
        "## 2) Nuclear reactor control  \n",
        "Do problem 5 from Nise 1e Chapter 1 (not present in 7e)\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wOjABgMf9DrM",
        "colab_type": "text"
      },
      "source": [
        "## 3) Controlling an Electronic Discharge Machine (EDM)\n",
        "An EDM uses an electrical discharge(8) between an electrode (9) and the work piece(2) to cut metal.  The gap must be precisely controlled.  If the gap is too large no current will not flow.  If the gap is too short the electrode and work pice will short circuit.  \n",
        "\n",
        "Make the simplifying assumption that the electrode current is proportional to the gap size.  Draw a closed-loop black diagram for the EDM process, showing the input, output and electrode position.\n",
        "\n",
        "<img src=https://upload.wikimedia.org/wikipedia/commons/c/c9/EDM_scheme.png width=65% />\n",
        "\n",
        "edm figure taken from wikipedia.  Original work by frank50 s\n",
        "\n",
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YkhrOHI_AUMk",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    }
  ]
}